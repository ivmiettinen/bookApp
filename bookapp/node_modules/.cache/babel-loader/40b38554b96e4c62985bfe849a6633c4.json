{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3003/api/books';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst remove = async id => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const request = await axios.delete(`${baseUrl}/${id}`, config);\n  return request.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update,\n  setToken\n};","map":{"version":3,"sources":["/GitHub/bookApp/bookapp/src/services/books.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","post","remove","id","delete","update","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,iCAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACH,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAApC,CAAP;AACH,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,SAAP,IAAqB;AAChC,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADE,GAAf;AAIA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACH,CAPD;;AASA,MAAMO,MAAM,GAAG,MAAOC,EAAP,IAAc;AACzB,QAAML,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADE,GAAf;AAIA,QAAMI,OAAO,GAAG,MAAMN,KAAK,CAACmB,MAAN,CAAc,GAAElB,OAAQ,IAAGiB,EAAG,EAA9B,EAAiCL,MAAjC,CAAtB;AACA,SAAOP,OAAO,CAACI,IAAf;AACH,CAPD;;AASA,MAAMU,MAAM,GAAG,CAACF,EAAD,EAAKN,SAAL,KAAmB;AAC9B,QAAMN,OAAO,GAAGN,KAAK,CAACqB,GAAN,CAAW,GAAEpB,OAAQ,IAAGiB,EAAG,EAA3B,EAA8BN,SAA9B,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAApC,CAAP;AACH,CAHD;;AAKA,eAAe;AAAEL,EAAAA,MAAF;AAAUM,EAAAA,MAAV;AAAkBM,EAAAA,MAAlB;AAA0BG,EAAAA,MAA1B;AAAkCjB,EAAAA;AAAlC,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3003/api/books'\n\nlet token = null\n\nconst setToken = (newToken) => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst remove = async (id) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const request = await axios.delete(`${baseUrl}/${id}`, config)\n    return request.data\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then((response) => response.data)\n}\n\nexport default { getAll, create, remove, update, setToken }\n"]},"metadata":{},"sourceType":"module"}