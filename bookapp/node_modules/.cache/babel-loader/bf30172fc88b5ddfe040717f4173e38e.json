{"ast":null,"code":"var _jsxFileName = \"/GitHub/bookApp/bookapp/src/components/Togglable.js\";\nimport React, { useState, useImperativeHandle } from 'react';\nimport classes from './Togglable.module.css';\nimport PropTypes from 'prop-types';\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  return React.createElement(\"div\", {\n    className: classes.togglableDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: showWhenVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.children, React.createElement(\"button\", {\n    className: classes.buttonHide,\n    onClick: toggleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"hide\")), React.createElement(\"div\", {\n    style: hideWhenVisible,\n    className: classes.hideWhenVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: props.className,\n    onClick: toggleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.buttonLabel)));\n});\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\nTogglable.displayName = 'Togglable';\nexport default Togglable;","map":{"version":3,"sources":["/GitHub/bookApp/bookapp/src/components/Togglable.js"],"names":["React","useState","useImperativeHandle","classes","PropTypes","Togglable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","togglableDiv","children","buttonHide","className","buttonLabel","propTypes","string","isRequired","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,mBAA1B,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,SAAS,GAAGL,KAAK,CAACM,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMU,eAAe,GAAG;AAAEC,IAAAA,OAAO,EAAEH,OAAO,GAAG,MAAH,GAAY;AAA9B,GAAxB;AACA,QAAMI,eAAe,GAAG;AAAED,IAAAA,OAAO,EAAEH,OAAO,GAAG,EAAH,GAAQ;AAA1B,GAAxB;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAIAP,EAAAA,mBAAmB,CAACM,GAAD,EAAM,MAAM;AAC3B,WAAO;AACHM,MAAAA;AADG,KAAP;AAGH,GAJkB,CAAnB;AAMA,SACI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACY,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAEF,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACS,QADX,EAEI;AACI,IAAA,SAAS,EAAEb,OAAO,CAACc,UADvB;AAEI,IAAA,OAAO,EAAEH,gBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,EAUI;AAAK,IAAA,KAAK,EAAEH,eAAZ;AAA6B,IAAA,SAAS,EAAER,OAAO,CAACQ,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAEJ,KAAK,CAACW,SAAzB;AAAoC,IAAA,OAAO,EAAEJ,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACY,WADX,CADJ,CAVJ,CADJ;AAkBH,CAlCiB,CAAlB;AAoCAd,SAAS,CAACe,SAAV,GAAsB;AAClBD,EAAAA,WAAW,EAAEf,SAAS,CAACiB,MAAV,CAAiBC;AADZ,CAAtB;AAIAjB,SAAS,CAACkB,WAAV,GAAwB,WAAxB;AAEA,eAAelB,SAAf","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport classes from './Togglable.module.css'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility,\n        }\n    })\n\n    return (\n        <div className={classes.togglableDiv}>\n            <div style={showWhenVisible}>\n                {props.children}\n                <button\n                    className={classes.buttonHide}\n                    onClick={toggleVisibility}\n                >\n                    hide\n                </button>\n            </div>\n            <div style={hideWhenVisible} className={classes.hideWhenVisible}>\n                <button className={props.className} onClick={toggleVisibility}>\n                    {props.buttonLabel}\n                </button>\n            </div>\n        </div>\n    )\n})\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired,\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable\n"]},"metadata":{},"sourceType":"module"}