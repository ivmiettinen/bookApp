{"ast":null,"code":"var _jsxFileName = \"/GitHub/bookApp/bookapp/src/components/SignIn/LoginForm.js\";\nimport React, { useState } from 'react';\nimport classes from './LoginForm.module.css';\nimport PropTypes from 'prop-types';\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\n\nconst LoginForm = ({\n  handleLogin,\n  showSignUp,\n  setErrorMessage\n}) => {\n  const [username, setUsername] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSignIn = e => {\n    e.preventDefault(); // console.log('name.trim().length', name.trim().length)\n\n    if (showSignUp && username.trim().length < 3) {\n      setErrorMessage('Username must be at least 3 characters long.');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      return;\n    } else if (showSignUp && name.trim().length < 3) {\n      console.log('arg');\n      setErrorMessage('Name must be at least 3 characters long.');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      return;\n    } else if (showSignUp && password.trim().length < 1) {\n      setErrorMessage('password must be 3 letters or longer.');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      return;\n    } else {\n      handleLogin({\n        name: name,\n        username: username,\n        password: password\n      });\n      setName('');\n      setUsername('');\n      setPassword('');\n    }\n  };\n\n  return React.createElement(Card, {\n    className: classes.authButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSignIn,\n    className: classes.authForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, showSignUp ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.emailLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"e-mail:\"), React.createElement(\"input\", {\n    className: classes.LoginformInput,\n    type: \"email\",\n    value: name,\n    name: \"name\",\n    placeholder: \"Your email...\",\n    onChange: ({\n      target\n    }) => setName(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })) : React.createElement(React.Fragment, null), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.usernameLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"username: \"), React.createElement(\"input\", {\n    className: classes.LoginformInput,\n    type: \"text\",\n    value: username,\n    name: \"Username\",\n    placeholder: \"Your name...\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.passwordLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"password: \"), React.createElement(\"input\", {\n    className: classes.LoginformInput,\n    type: \"password\",\n    value: password,\n    name: \"Password\",\n    placeholder: \"Your password...\",\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, showSignUp ? 'Sign up' : 'login'))));\n};\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  showSignUp: PropTypes.bool.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/GitHub/bookApp/bookapp/src/components/SignIn/LoginForm.js"],"names":["React","useState","classes","PropTypes","Card","Button","LoginForm","handleLogin","showSignUp","setErrorMessage","username","setUsername","name","setName","password","setPassword","handleSignIn","e","preventDefault","trim","length","setTimeout","console","log","authButtons","authForm","emailLabel","LoginformInput","target","value","usernameLabel","passwordLabel","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport classes from './LoginForm.module.css'\nimport PropTypes from 'prop-types'\nimport Card from '../UI/Card'\nimport Button from '../UI/Button'\n\nconst LoginForm = ({ handleLogin, showSignUp, setErrorMessage }) => {\n    const [username, setUsername] = useState('')\n    const [name, setName] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSignIn = (e) => {\n        e.preventDefault()\n\n        // console.log('name.trim().length', name.trim().length)\n\n        if (showSignUp && username.trim().length < 3) {\n            setErrorMessage('Username must be at least 3 characters long.')\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n            return\n        } else if (showSignUp && name.trim().length < 3) {\n            console.log('arg')\n            setErrorMessage('Name must be at least 3 characters long.')\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n            return\n        } else if (showSignUp && password.trim().length < 1) {\n            setErrorMessage('password must be 3 letters or longer.')\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n            return\n        } else {\n            handleLogin({\n                name: name,\n                username: username,\n                password: password,\n            })\n            setName('')\n            setUsername('')\n            setPassword('')\n        }\n    }\n\n    return (\n        <Card className={classes.authButtons}>\n            <form onSubmit={handleSignIn} className={classes.authForm}>\n                {showSignUp ? (\n                    <p>\n                        <label className={classes.emailLabel}>e-mail:</label>\n                        <input\n                            className={classes.LoginformInput}\n                            type='email'\n                            value={name}\n                            name='name'\n                            placeholder='Your email...'\n                            onChange={({ target }) => setName(target.value)}\n                        />\n                    </p>\n                ) : (\n                    <></>\n                )}\n                <p>\n                    <label className={classes.usernameLabel}>username: </label>\n\n                    <input\n                        className={classes.LoginformInput}\n                        type='text'\n                        value={username}\n                        name='Username'\n                        placeholder='Your name...'\n                        onChange={({ target }) => setUsername(target.value)}\n                    />\n                </p>\n\n                <p>\n                    <label className={classes.passwordLabel}>password: </label>\n                    <input\n                        className={classes.LoginformInput}\n                        type='password'\n                        value={password}\n                        name='Password'\n                        placeholder='Your password...'\n                        onChange={({ target }) => setPassword(target.value)}\n                    />\n                </p>\n                <p>\n                    <Button type='submit'>\n                        {showSignUp ? 'Sign up' : 'login'}\n                    </Button>\n                </p>\n            </form>\n        </Card>\n    )\n}\n\nLoginForm.propTypes = {\n    handleLogin: PropTypes.func.isRequired,\n    showSignUp: PropTypes.bool.isRequired,\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}