{"ast":null,"code":"var _jsxFileName = \"/GitHub/bookApp/bookapp/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Book from './components/Books/Book';\nimport bookService from './services/books';\nimport SuccessMessage from './components/Messages/SuccessMessage';\nimport loginService from './services/login';\nimport signUpService from './services/signUp';\nimport './App.css';\nimport LoginForm from './components/SignIn/LoginForm';\nimport Togglable from './components/Togglable';\nimport BookForm from './components/Books/BookForm';\nimport ErrorMessage from './components/Messages/ErrorMessage';\nimport LogOutUser from './components/SignIn/LogOutUser';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport About from './components/About';\nimport Auth from './components/SignIn/Auth';\nimport Layout from './components/LayOut/Layout';\nimport BookHeader from './components/Books/BookHeader';\n\nconst App = () => {\n  const [books, setBooks] = useState([]);\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [showSignUp, setShowSignUp] = useState(false);\n  const [showLogIn, setShowLogIn] = useState(false);\n  useEffect(() => {\n    bookService.getAll().then(books => setBooks(books));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBookappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      bookService.setToken(user.token);\n    }\n  }, []);\n  const history = useHistory();\n  const bookFormRef = useRef();\n\n  const addBook = async bookObject => {\n    bookFormRef.current.toggleVisibility(); // console.log('bookObjecti', bookObject)\n\n    try {\n      const waitBooks = await bookService.create(bookObject);\n      setBooks(books.concat(waitBooks)); // console.log('returened waitBooks', waitBooks)\n\n      setSuccessMessage(`A new book ${waitBooks.title} by ${waitBooks.author} added`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    } catch (exception) {\n      console.log('exception', exception.message);\n      setErrorMessage('You must log in before you can add books');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const addNewLike = async book => {\n    const findId = books.find(b => b.id === book);\n    const id = findId.id;\n    const chageBookLikes = { ...findId,\n      likes: findId.likes + 1\n    };\n\n    try {\n      const updateBook = await bookService.update(id, chageBookLikes);\n      setBooks(books.map(per => per.id !== id ? per : updateBook));\n    } catch (exception) {\n      console.log('error on put:', exception);\n    }\n  };\n\n  const deleteBook = async del => {\n    const id = del;\n    const copyOfBooks = [...books];\n    const findBook = { ...copyOfBooks.find(a => a.id === del)\n    };\n    const filterById = copyOfBooks.filter(p => p.id !== id);\n\n    if (window.confirm(`Delete book ${findBook.title} ?`)) {\n      try {\n        await bookService.remove(id);\n        setBooks(filterById);\n        setSuccessMessage('The book was successfully deleted');\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      } catch (exception) {\n        console.log('delete error:', exception.message);\n        setErrorMessage('You can`t remove a book you have not added.', exception);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      }\n    }\n  };\n\n  const logOut = () => {\n    window.localStorage.clear();\n    bookService.setToken(null);\n    setUser(null);\n    setShowSignUp(false);\n    setShowLogIn(false);\n  };\n\n  const handleLogin = async userInfo => {\n    let user; // console.log('username', userInfo.username)\n    // console.log('userinfohandlessa', userInfo)\n\n    try {\n      if (showSignUp) {\n        user = await signUpService.signUp(userInfo);\n      } else {\n        user = await loginService.login(userInfo);\n      } // console.log('handleLogin user', user)\n\n\n      window.localStorage.setItem('loggedBookappUser', JSON.stringify(user));\n      bookService.setToken(user.token);\n      setUser(user);\n      history.push('/books');\n    } catch (exception) {\n      console.log('error on login:', exception.message);\n\n      if (JSON.stringify(exception.response.data).includes('unique')) {\n        setErrorMessage(`Username '${userInfo.username}' is already in use`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      }\n    }\n  };\n\n  const mapAndSortBooks = books.sort((a, b) => b.likes - a.likes).map(book => React.createElement(Book, {\n    key: book.id,\n    book: book,\n    Togglable: Togglable,\n    deleteBook: deleteBook,\n    addNewLike: addNewLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }));\n  return React.createElement(Layout, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(SuccessMessage, {\n    successMessage: successMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Redirect, {\n    to: \"/auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, !showSignUp || !showLogIn ? React.createElement(Auth, {\n    showSignUp: setShowSignUp,\n    setShowLogIn: setShowLogIn,\n    setShowSignUp: setShowSignUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null)), React.createElement(Route, {\n    path: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, ' ', React.createElement(LoginForm, {\n    handleLogin: handleLogin,\n    showSignUp: showSignUp,\n    setErrorMessage: setErrorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    handleLogin: handleLogin,\n    showSignUp: showSignUp,\n    setErrorMessage: setErrorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(BookHeader, {\n    mapAndSortBooks: mapAndSortBooks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(Togglable, {\n    buttonLabel: \"Add a book\",\n    ref: bookFormRef,\n    className: \"hideWhenVisible\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(BookForm, {\n    addBook: addBook,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })), React.createElement(React.Fragment, null, mapAndSortBooks)), React.createElement(Route, {\n    path: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(About, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/logout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(LogOutUser, {\n    user: user,\n    logOut: logOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/GitHub/bookApp/bookapp/src/App.js"],"names":["React","useState","useEffect","useRef","Book","bookService","SuccessMessage","loginService","signUpService","LoginForm","Togglable","BookForm","ErrorMessage","LogOutUser","Switch","Route","Redirect","useHistory","About","Auth","Layout","BookHeader","App","books","setBooks","user","setUser","errorMessage","setErrorMessage","successMessage","setSuccessMessage","showSignUp","setShowSignUp","showLogIn","setShowLogIn","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","history","bookFormRef","addBook","bookObject","current","toggleVisibility","waitBooks","create","concat","title","author","setTimeout","exception","console","log","message","addNewLike","book","findId","find","b","id","chageBookLikes","likes","updateBook","update","map","per","deleteBook","del","copyOfBooks","findBook","a","filterById","filter","p","confirm","remove","logOut","clear","handleLogin","userInfo","signUp","login","setItem","stringify","push","response","data","includes","username","mapAndSortBooks","sort"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Book from './components/Books/Book'\nimport bookService from './services/books'\nimport SuccessMessage from './components/Messages/SuccessMessage'\nimport loginService from './services/login'\nimport signUpService from './services/signUp'\nimport './App.css'\nimport LoginForm from './components/SignIn/LoginForm'\nimport Togglable from './components/Togglable'\nimport BookForm from './components/Books/BookForm'\nimport ErrorMessage from './components/Messages/ErrorMessage'\nimport LogOutUser from './components/SignIn/LogOutUser'\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom'\nimport About from './components/About'\nimport Auth from './components/SignIn/Auth'\nimport Layout from './components/LayOut/Layout'\nimport BookHeader from './components/Books/BookHeader'\n\nconst App = () => {\n    const [books, setBooks] = useState([])\n    const [user, setUser] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [successMessage, setSuccessMessage] = useState(null)\n    const [showSignUp, setShowSignUp] = useState(false)\n    const [showLogIn, setShowLogIn] = useState(false)\n\n    useEffect(() => {\n        bookService.getAll().then((books) => setBooks(books))\n    }, [])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBookappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            bookService.setToken(user.token)\n        }\n    }, [])\n\n    const history = useHistory()\n\n    const bookFormRef = useRef()\n\n    const addBook = async (bookObject) => {\n        bookFormRef.current.toggleVisibility()\n\n        // console.log('bookObjecti', bookObject)\n\n        try {\n            const waitBooks = await bookService.create(bookObject)\n\n            setBooks(books.concat(waitBooks))\n\n            // console.log('returened waitBooks', waitBooks)\n\n            setSuccessMessage(\n                `A new book ${waitBooks.title} by ${waitBooks.author} added`\n            )\n            setTimeout(() => {\n                setSuccessMessage(null)\n            }, 5000)\n        } catch (exception) {\n            console.log('exception', exception.message)\n            setErrorMessage('You must log in before you can add books')\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        }\n    }\n\n    const addNewLike = async (book) => {\n        const findId = books.find((b) => b.id === book)\n\n        const id = findId.id\n\n        const chageBookLikes = { ...findId, likes: findId.likes + 1 }\n\n        try {\n            const updateBook = await bookService.update(id, chageBookLikes)\n            setBooks(books.map((per) => (per.id !== id ? per : updateBook)))\n        } catch (exception) {\n            console.log('error on put:', exception)\n        }\n    }\n\n    const deleteBook = async (del) => {\n        const id = del\n\n        const copyOfBooks = [...books]\n\n        const findBook = { ...copyOfBooks.find((a) => a.id === del) }\n\n        const filterById = copyOfBooks.filter((p) => p.id !== id)\n\n        if (window.confirm(`Delete book ${findBook.title} ?`)) {\n            try {\n                await bookService.remove(id)\n\n                setBooks(filterById)\n                setSuccessMessage('The book was successfully deleted')\n                setTimeout(() => {\n                    setSuccessMessage(null)\n                }, 5000)\n            } catch (exception) {\n                console.log('delete error:', exception.message)\n                setErrorMessage(\n                    'You can`t remove a book you have not added.',\n                    exception\n                )\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            }\n        }\n    }\n\n    const logOut = () => {\n        window.localStorage.clear()\n        bookService.setToken(null)\n        setUser(null)\n        setShowSignUp(false)\n        setShowLogIn(false)\n    }\n\n    const handleLogin = async (userInfo) => {\n        let user\n\n        // console.log('username', userInfo.username)\n\n        // console.log('userinfohandlessa', userInfo)\n\n        try {\n            if (showSignUp) {\n                user = await signUpService.signUp(userInfo)\n            } else {\n                user = await loginService.login(userInfo)\n            }\n\n            // console.log('handleLogin user', user)\n            window.localStorage.setItem(\n                'loggedBookappUser',\n                JSON.stringify(user)\n            )\n            bookService.setToken(user.token)\n            setUser(user)\n            history.push('/books')\n        } catch (exception) {\n            console.log('error on login:', exception.message)\n\n            if (JSON.stringify(exception.response.data).includes('unique')) {\n                setErrorMessage(\n                    `Username '${userInfo.username}' is already in use`\n                )\n\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            }\n        }\n    }\n\n    const mapAndSortBooks = books\n        .sort((a, b) => b.likes - a.likes)\n        .map((book) => (\n            <Book\n                key={book.id}\n                book={book}\n                Togglable={Togglable}\n                deleteBook={deleteBook}\n                addNewLike={addNewLike}\n            />\n        ))\n\n    return (\n        <Layout user={user}>\n            <SuccessMessage successMessage={successMessage} />\n            <ErrorMessage errorMessage={errorMessage} />\n            <Switch>\n                <Route path='/' exact>\n                    <Redirect to='/auth'></Redirect>\n                </Route>\n                <Route path='/auth'>\n                    {!showSignUp || !showLogIn ? (\n                        <Auth\n                            showSignUp={setShowSignUp}\n                            setShowLogIn={setShowLogIn}\n                            setShowSignUp={setShowSignUp}\n                        />\n                    ) : (\n                        <></>\n                    )}\n                </Route>\n                <Route path='/login'>\n                    {' '}\n                    <LoginForm\n                        handleLogin={handleLogin}\n                        showSignUp={showSignUp}\n                        setErrorMessage={setErrorMessage}\n                    />\n                </Route>\n                <Route path='/signup'>\n                    <LoginForm\n                        handleLogin={handleLogin}\n                        showSignUp={showSignUp}\n                        setErrorMessage={setErrorMessage}\n                    />\n                </Route>\n\n                <Route path='/books'>\n                    <BookHeader mapAndSortBooks={mapAndSortBooks} />\n                    <Togglable\n                        buttonLabel='Add a book'\n                        ref={bookFormRef}\n                        className='hideWhenVisible'\n                    >\n                        <BookForm addBook={addBook} />\n                    </Togglable>\n                    <>{mapAndSortBooks}</>\n                </Route>\n                <Route path='/about'>\n                    <About />\n                </Route>\n                <Route path='/logout'>\n                    <LogOutUser user={user} logOut={logOut} />\n                </Route>\n            </Switch>\n        </Layout>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}